{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///underscore.slice.min.js","webpack:///webpack/bootstrap 07c79f19de999db362dc?0a57","webpack:///./index.js?3e35","webpack:///./src/index.js"],"names":["root","factory","exports","module","define","amd","a","i","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","AssertionError","message","err","Error","stack","stacktrace","name","assert","condition","ErrorConstructor","prototype","constructor"],"mappings":"CAAA,SAAAA,EAAAC,GACA,mBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,QACA,sBAAAG,gBAAAC,IACAD,UAAAH,OACA,CACA,GAAAK,GAAAL,GACA,QAAAM,KAAAD,IAAA,gBAAAJ,iBAAAF,GAAAO,GAAAD,EAAAC,KAECC,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAT,OAGA,IAAAC,GAAAS,EAAAD,IACAT,WACAW,GAAAF,EACAG,QAAA,EAUA,OANAL,GAAAE,GAAAI,KAAAZ,EAAAD,QAAAC,IAAAD,QAAAQ,GAGAP,EAAAW,QAAA,EAGAX,EAAAD,QAvBA,GAAAU,KAqCA,OATAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,GAGAR,EAAA,KDgBM,SAASP,EAAQD,EAASQ,GEtDhC,YAEAP,GAAAD,QAAAQ,EAAA,IF6DM,SAASP,EAAQD;;;;;;;;;;;;;AGjDvB,YAQA,SAAAiB,GAAAC,GACA,GAAAC,GAAA,GAAAC,OAAAF,GACAG,EAAAF,EAAAE,OAAAF,EAAAG,YAAA,IAEAhB,MAAAiB,KAAA,iBACAjB,KAAAY,WAAAZ,KAAAiB,KACAjB,KAAAgB,WAAAD,EAcA,QAAAG,GAAAC,EAAAP,GACA,IAAAO,EACA,SAAAD,GAAAE,iBAAAR,GAbAD,EAAAU,UAAAP,MAAAO,UACAV,EAAAU,UAAAC,YAAAX,EAiBAO,EAAAE,iBAAAT,EAEAhB,EAAAD,QAAAwB","file":"underscore.slice.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t/**\n\t * @author Piotr Kowalski <piecioshka@gmail.com> (http://piecioshka.pl)\n\t * @name underscore.assert\n\t * @description Plugin for Underscore.js: add method '_.assert', which simplify checking states\n\t * @version 1.2.1\n\t * @license MIT\n\t * @example\n\t *   // nothing happened ...\n\t *   _.assert(true, 'True must be truly value');\n\t *\n\t *   // throws AssertionError with message\n\t *   _.assert(typeof Object === 'number', 'Global value *Object* should be fn');\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Custom error constructor.\n\t *\n\t * @constructor\n\t * @param {string} [message]\n\t */\n\tfunction AssertionError(message) {\n\t    var err = new Error(message);\n\t    var stack = err.stack || err.stacktrace || null;\n\t\n\t    this.name = 'AssertionError';\n\t    this.message = (message || this.name);\n\t    this.stacktrace = stack;\n\t}\n\t\n\tAssertionError.prototype = Error.prototype;\n\tAssertionError.prototype.constructor = AssertionError;\n\t\n\t/**\n\t * Check first param for `true`.\n\t * When first param is `false` value, throw `AssertionError`.\n\t *\n\t * @param {boolean} condition\n\t * @param {string} [message]\n\t * @throws When condition will be falsy value.\n\t */\n\tfunction assert(condition, message) {\n\t    if (!condition) {\n\t        throw new assert.ErrorConstructor(message);\n\t    }\n\t}\n\t\n\t// Set reference to constructor of error which will throw on failed.\n\tassert.ErrorConstructor = AssertionError;\n\t\n\tmodule.exports = assert;\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// underscore.slice.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 07c79f19de999db362dc","'use strict';\n\nmodule.exports = require('./src/index');\n\n\n\n// WEBPACK FOOTER //\n// ./~/string-replace-loader?{\"multiple\":[{\"search\":\"$AUTHOR$\",\"replace\":\"Piotr Kowalski <piecioshka@gmail.com> (http:/piecioshka.pl)\"},{\"search\":\"$NAME$\",\"replace\":\"underscore.assert\"},{\"search\":\"$DESCRIPTION$\",\"replace\":\"Plugin for Underscore.js: add method '_.assert', which simplify checking states\"},{\"search\":\"$VERSION$\",\"replace\":\"1.2.1\"},{\"search\":\"$LICENSE$\",\"replace\":\"MIT\"}]}!./index.js","/**\n * @author Piotr Kowalski <piecioshka@gmail.com> (http://piecioshka.pl)\n * @name underscore.assert\n * @description Plugin for Underscore.js: add method '_.assert', which simplify checking states\n * @version 1.2.1\n * @license MIT\n * @example\n *   // nothing happened ...\n *   _.assert(true, 'True must be truly value');\n *\n *   // throws AssertionError with message\n *   _.assert(typeof Object === 'number', 'Global value *Object* should be fn');\n */\n\n'use strict';\n\n/**\n * Custom error constructor.\n *\n * @constructor\n * @param {string} [message]\n */\nfunction AssertionError(message) {\n    var err = new Error(message);\n    var stack = err.stack || err.stacktrace || null;\n\n    this.name = 'AssertionError';\n    this.message = (message || this.name);\n    this.stacktrace = stack;\n}\n\nAssertionError.prototype = Error.prototype;\nAssertionError.prototype.constructor = AssertionError;\n\n/**\n * Check first param for `true`.\n * When first param is `false` value, throw `AssertionError`.\n *\n * @param {boolean} condition\n * @param {string} [message]\n * @throws When condition will be falsy value.\n */\nfunction assert(condition, message) {\n    if (!condition) {\n        throw new assert.ErrorConstructor(message);\n    }\n}\n\n// Set reference to constructor of error which will throw on failed.\nassert.ErrorConstructor = AssertionError;\n\nmodule.exports = assert;\n\n\n\n// WEBPACK FOOTER //\n// ./~/string-replace-loader?{\"multiple\":[{\"search\":\"$AUTHOR$\",\"replace\":\"Piotr Kowalski <piecioshka@gmail.com> (http:/piecioshka.pl)\"},{\"search\":\"$NAME$\",\"replace\":\"underscore.assert\"},{\"search\":\"$DESCRIPTION$\",\"replace\":\"Plugin for Underscore.js: add method '_.assert', which simplify checking states\"},{\"search\":\"$VERSION$\",\"replace\":\"1.2.1\"},{\"search\":\"$LICENSE$\",\"replace\":\"MIT\"}]}!./src/index.js"],"sourceRoot":""}
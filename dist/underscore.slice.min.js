!function(t,r){if("object"==typeof exports&&"object"==typeof module)module.exports=r();else if("function"==typeof define&&define.amd)define([],r);else{var o=r();for(var e in o)("object"==typeof exports?exports:t)[e]=o[e]}}(this,function(){return function(t){function r(e){if(o[e])return o[e].exports;var n=o[e]={exports:{},id:e,loaded:!1};return t[e].call(n.exports,n,n.exports,r),n.loaded=!0,n.exports}var o={};return r.m=t,r.c=o,r.p="",r(0)}([function(t,r,o){"use strict";t.exports=o(1)},function(t,r){/**
	 * @author Piotr Kowalski <piecioshka@gmail.com> (http://piecioshka.pl)
	 * @name underscore.assert
	 * @description Plugin for Underscore.js: add method '_.assert', which simplify checking states
	 * @version 1.2.1
	 * @license MIT
	 * @example
	 *   // nothing happened ...
	 *   _.assert(true, 'True must be truly value');
	 *
	 *   // throws AssertionError with message
	 *   _.assert(typeof Object === 'number', 'Global value *Object* should be fn');
	 */
"use strict";function o(t){var r=new Error(t),o=r.stack||r.stacktrace||null;this.name="AssertionError",this.message=t||this.name,this.stacktrace=o}function e(t,r){if(!t)throw new e.ErrorConstructor(r)}o.prototype=Error.prototype,o.prototype.constructor=o,e.ErrorConstructor=o,t.exports=e}])});
//# sourceMappingURL=underscore.slice.min.js.map